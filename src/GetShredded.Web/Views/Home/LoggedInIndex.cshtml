@inject IUserService  service
@{
    ViewData["Title"] = "LoggedInIndex";

    var model = this.service.GetHomeViewDetails();
}
<div class="container d-flex justify-content-around col-md-12 col-sm-6 card-group" style="margin-top:50px;">
    <div class="col-md-4" style="overflow: auto; margin-bottom: 20px">
        <div class="col-md-12 border border-dark">
            <div class=" card-header text-center text-dark  container-fluid">Last Published Diaries</div>
            @foreach (var s in model.Diaries)
            {
                <div class="card-body w-100 border border-dark mt-1 mb-1">
                    <div class="container d-flex justify-content-between row mx-auto">
                        <h5 class="card-title">Title: @s.Title</h5>
                        <h6 class="card-subtitle text-muted">Published: @s.CreatedOn</h6>
                    </div>
                    <hr style="height: 2px" />
                    <div class="container d-flex justify-content-between row">
                        @if (s.User == null)
                        {
                            <h6 class="card-title text-center">User: @GlobalConstants.DeletedUser</h6>

                        }
                        else
                        {
                            <h6 class="card-title text-center">User: @s.User</h6>

                        }
                        <h6 class="card-subtitle text-muted">Type: @s.DiaryType</h6>
                    </div>
                    <hr />
                    @s.Summary
                    <hr />
                    <a asp-action="Details" asp-controller="Diaries" asp-route-id="@s.Id" class="card-link"><i class="fas fa-book-open"></i>Go to Diary</a>
                    <hr />
                </div>
            }
        </div>
    </div>
</div>
@section scripts{
    @{ await Html.RenderPartialAsync("_MyScriptsPartial"); }
}