@model GetShredded.ViewModels.Output.Users.UserOutputModel
@inject IMessageService service
@inject UserManager<GetShreddedUser> userManager
@{
    ViewData["Title"] = "Profile";
    var error = TempData[GlobalConstants.Error];
    var user = this.userManager.FindByNameAsync(this.User.Identity.Name).GetAwaiter().GetResult();
    var hasRole = this.userManager.GetRolesAsync(user).GetAwaiter().GetResult().Any(x => x == GlobalConstants.Admin);
    bool sameUser = this.User.Identity.Name.Equals(@Model.Username);
}
<div class="row container col-md-12 mt-5 mb-5 ml-1">
    <div class="col-md-8 " style="overflow-y: auto; min-height: 300px; max-height:700px;">
        @if (Model.UserDiaries.Any())
        {
            foreach (var s in Model.UserDiaries)
            {
                <div class="w-100">
                    <div class="media">
                        <div class="media-body">
                            <h3 class="mt-0"> Diary Title: @s.Title</h3>
                            <a class="text-warning" asp-action="Details" asp-controller="Diaries" asp-route-id="@s.Id" asp-area="">View Diary</a>
                            <hr />
                            <h5>Summary:</h5>
                            <p>
                                @s.Summary
                            </p>
                        </div>
                    </div>
                </div>
                <hr style="height: 2px" />
            }
        }
        else
        {
            <h2 class="text-center text-warning">User has no written diaries</h2>
            <hr class="bg-dark" />
        }
    </div>
    <div class=" col-md-4">
        <div class="text-center">
            <h3 class="card-title" style="color: orange">User Details</h3>
        </div>
        <ul class="list-group text-center">
            <li class="list-group-item ">Name: @Model.Username</li>
            <li class="list-group-item ">First Name: @Model.FirstName</li>
            <li class="list-group-item ">Last Name: @Model.LastName</li>
            <li class="list-group-item ">Email: @Model.Email</li>
        </ul>
    </div>
</div>
@if (!sameUser)
{
    if (hasRole)
    {
        <div class=" panel panel-info w-100 mt-2 border border-dark">
            <h5 class="card-header">Leave a Message:</h5>
            <div class="card-body">
                <form asp-action="SendMessage" asp-controller="Messages" asp-area="" method="post">
                    <div class="form-group">
                        <input type="text" hidden="hidden" value="@this.User.Identity.Name" name="senderName" />
                        <input type="datetime" hidden="hidden" value="@DateTime.UtcNow" name="sendDate" />
                        <input hidden="hidden" type="text" value="@Model.Username" name="receiverName" />
                    </div>
                    <div class="form-group">
                        <textarea class="form-control" placeholder="Leave a message" rows="4" name="message" id="my-input" maxlength="400"></textarea>
                        <span id='remainingC'></span>
                    </div>
                    <button type="submit" class="btn btn-primary">Send message</button>
                    @if (error != null)
                    {
                        <div>
                            <span class="text-danger">@error</span>
                        </div>
                    }
                </form>
            </div>
        </div>
    }
} 
@section scripts{
    @{ await Html.RenderPartialAsync("_MyScriptsPartial"); }
    <script>
        $(document).ready(function () {
            var len = 0;
            var maxchar = 400;

            $('#my-input').keyup(function () {
                len = this.value.length;
                if (len > maxchar) {
                    return false;
                } else if (len > 0) {
                    $("#remainingC").html("Remaining characters: " + (maxchar - len));
                } else {
                    $("#remainingC").html("Remaining characters: " + (maxchar));
                }
            })
        });</script>
}