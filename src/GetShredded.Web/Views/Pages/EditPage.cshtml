@model PageEditModel
@{
    ViewData["Title"] = "EditPage";
}
<div class="container d-flex col-md-6 offset-3">
    <div class="col-md-12 w-100 mt-3" style="min-height: 700px;max-height:100%">
        <form asp-controller="Pages" asp-action="EditPage" asp-area="" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Author" type="hidden" class="form-control text-center" value="@Model.Author" />
                <input asp-for="DiaryId" type="hidden" class="form-control text-center" value="@Model.DiaryId" />
                <input asp-for="CreatedOn" type="hidden" class="form-control text-center" value="@DateTime.UtcNow" />
            </div>
            <div class="form-group">
                <label class="control-label col-md-4 offset-4" style="text-align:center" name="Title">Title</label>
                <input asp-for="Title" type="text" class="form-control" name="Title" placeholder="Add\Edit title..." />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group text-center" style="max-height: 600px; overflow-y:auto ">
                <label class="control-label text-center">Edit Content</label>
                <textarea asp-for="Content" class="form-control" rows="20" style="min-height:400px" id="editor"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
                @if (this.ViewData.ContainsKey(GlobalConstants.PageLength))
                {
                    <span class="text-danger">Currently your chapter is: @ViewData[GlobalConstants.PageLength] long</span>
                }
            </div>
            <div class="form-group col-md-12 text-center">
                <input type="submit" value="Edit Chapter" style="align-content: center" class="btn btn-warning" />
            </div>
        </form>
    </div>
</div>
@section scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{ await Html.RenderPartialAsync("_MyScriptsPartial"); }
}